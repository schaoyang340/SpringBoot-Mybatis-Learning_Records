<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sql.dao.Employees1Mapper">

    <resultMap id="BaseResultMap" type="org.sql.domain.Employees1">
            <id property="employeeId" column="employee_id" jdbcType="INTEGER"/>
            <result property="firstName" column="first_name" jdbcType="VARCHAR"/>
            <result property="lastName" column="last_name" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
            <result property="jobId" column="job_id" jdbcType="VARCHAR"/>
            <result property="salary" column="salary" jdbcType="DOUBLE"/>
            <result property="commissionPct" column="commission_pct" jdbcType="DOUBLE"/>
            <result property="managerId" column="manager_id" jdbcType="INTEGER"/>
            <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
            <result property="hiredate" column="hiredate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        e.employee_id,
        e.first_name,
        e.last_name,
        e.email,
        e.phone_number,
        e.job_id,
        e.salary,
        e.commission_pct,
        e.manager_id,
        e.department_id,
        e.hiredate
    </sql>


    <select id="listCondition" resultType="org.sql.domain.Employees1">
        SELECT
        <include refid="Base_Column_List"/>
        FROM employees1 e
        WHERE e.first_name LIKE CONCAT('%', #{name}, '%')
    </select>

    <!--动态SQL-->
    <select id="listCondition2" parameterType="string" resultType="org.sql.domain.Employees1">
        SELECT
        <include refid="Base_Column_List"/>
        FROM employees1 e
        <where>
            <if test="name != null || name != ''">
                and e.first_name like concat('%',#{name},'%')
            </if>
        </where>
    </select>

    <insert id="add" parameterType="org.sql.domain.Employees1">
        INSERT INTO employees1
            <trim prefix="("  suffixOverrides="," suffix=")">
                <if test="employeeId != null">
                    employee_id,
                </if>
                <if test="firstName != null">
                    first_name,
                </if>
                <if test="lastName != null">
                    last_name,
                </if>
                <if test="email != null">
                    email,
                </if>
                <if test="phoneNumber != null">
                    phone_number,
                </if>
                <if test="jobId != null">
                    job_id,
                </if>
                <if test="salary != null">
                    salary,
                </if>
                <if test="commissionPct != null">
                    commission_pct,
                </if>
                <if test="managerId != null">
                    manager_id,
                </if>
                <if test="departmentId != null">
                    department_id,
                </if>
                <if test="hiredate != null">
                    hiredate,
                </if>
            </trim>
        <trim prefix="values(" suffixOverrides="," suffix=")">
            <if test="employeeId != null">
                #{employeeId},
            </if>
            <if test="firstName != null">
                #{firstName},
            </if>
            <if test="lastName != null">
                #{lastName},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber},
            </if>
            <if test="jobId != null">
                #{jobId},
            </if>
            <if test="salary != null">
                #{salary},
            </if>
            <if test="commissionPct != null">
                #{commissionPct},
            </if>
            <if test="managerId != null">
                #{managerId},
            </if>
            <if test="departmentId != null">
                #{departmentId},
            </if>
            <if test="hiredate != null">
                #{hiredate},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="org.sql.domain.Employees1">
        update employees1
        <set>
            <if test="firstName != null">
                first_name = #{firstName},
            </if>
            <if test="lastName != null">
                last_name = #{lastName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber},
            </if>
            <if test="jobId != null">
                job_id = #{jobId},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="commissionPct != null">
                commission_pct = #{commissionPct},
            </if>
            <if test="managerId != null">
                manager_id =  #{managerId},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="hiredate != null">
                hiredate = #{hiredate},
            </if>
        </set>
        where employee_id = #{employeeId}
    </update>

    <delete id="del" parameterType="integer">
        delete from employees1 where employee_id = #{id}
    </delete>

    <!--显示员工信息，职位名称，部门名称-->
    <select id="listAll" parameterType="map" resultType="java.util.Map">
        SELECT
            <include refid="Base_Column_List"/>,j.job_title,d.department_name
        FROM employees1 e
        LEFT JOIN jobs j on e.job_id = j.job_id
        LEFT JOIN departments1 d on d.department_id = e.department_id
        <where>
            <if test="ename != null">
                and concat(e.first_name, e.lanst_name) like concat('%',#{ename},'%')
            </if>
            <if test="jobId != null">
                and j.job_id = #{jobId}
            </if>
            <if test="deptId != null">
                and department_id = #{deptId}
            </if>
        </where>
    </select>

</mapper>
